name: CI/CD Pipeline for Spring Boot Application with Docker

on:
  push:
    branches:
      - master  # Trigger saat ada perubahan di branch master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: db_course
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean install -DskipTests

    - name: Run Unit Tests with Maven
      run: mvn test

    - name: Install Docker and Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io docker-compose

    - name: Build Docker Image
      run: docker-compose build

    - name: Run Docker Compose
      run: docker-compose up -d

    - name: Integration Test
      run: mvn verify

    - name: Shut down Docker Compose
      run: docker-compose down
